/*
„Éï„Ç°„Ç§„É´: create_D30_trading_scores_16indicators.sql
Ë™¨Êòé: D30_trading_scores 16ÊåáÊ®ôÂØæÂøúÁâà
‰ΩúÊàêÊó•: 2025Âπ¥1Êúà18Êó•
‰øÆÊ≠£ÂÜÖÂÆπ:
  - score_type„Çí16Á®ÆÈ°û„Å´Êã°ÂºµÔºàUP_DIRECTION/DOWN_DIRECTIONÂàÜÈõ¢Ôºâ
  - D81„ÅÆÊñ∞ÊßãÈÄ†ÔºàBUY/SELLÁµ±‰∏Ä„ÄÅtrade_type„Å™„ÅóÔºâ„Å´ÂØæÂøú
  - ÂêÑ„Çπ„Ç≥„Ç¢„Å´ÂØæ„Åó„Å¶BUY/SELL‰∏°Êñπ„ÅÆÊà¶Áï•„ÇíÈÅ©Áî®
ÂÆüË°åÊôÇÈñì: Á¥Ñ15-20ÂàÜ‰∫àÊÉ≥
*/

-- ============================================================================
-- Part 1: „Éá„Éº„ÇøÊäïÂÖ•Ââç„ÅÆÁ¢∫Ë™ç„Å®„ÇØ„É™„Ç¢
-- ============================================================================

-- Âá¶ÁêÜÈñãÂßã„É°„ÉÉ„Çª„Éº„Ç∏
SELECT 
  'üöÄ D30_trading_scores 16ÊåáÊ®ôÁâàÊäïÂÖ•ÈñãÂßã' as message,
  '„Çπ„Ç≥„Ç¢„Éô„Éº„ÇπÂèñÂºï„Ç∑„Ç∞„Éä„É´Ôºà16Á®ÆÈ°û√óBUY/SELLÔºâ' as feature,
  'ÂØæË±°ÊúüÈñì: 2022-07-01 „Äú ÊúÄÊñ∞ÔºàÂÖ®ÊúüÈñìÔºâ' as target_period,
  CURRENT_TIMESTAMP() as start_time;

-- Êó¢Â≠ò„Éá„Éº„Çø„Çí„ÇØ„É™„Ç¢
DELETE FROM `kabu-376213.kabu2411.D30_trading_scores` WHERE TRUE;

-- ============================================================================
-- Part 2: ÂÖ®ÊúüÈñì„Éá„Éº„ÇøÊäïÂÖ•Ôºà16ÊåáÊ®ôÁâàÔºâ
-- ============================================================================

-- „Éá„Éº„ÇøÊäïÂÖ•
INSERT INTO `kabu-376213.kabu2411.D30_trading_scores`
WITH 
-- 1. D10„Å®D81„Åã„ÇâÂÖ®ÊúüÈñì„ÅÆ„Çπ„Ç≥„Ç¢„ÇíË®àÁÆóÔºàÊñ∞D81ÊßãÈÄ†ÂØæÂøúÔºâ
score_calculation AS (
  SELECT 
    d.signal_date,
    d.stock_code,
    d.stock_name,
    d.signal_type,
    d.signal_bin,
    d.trade_type as original_trade_type,  -- ÂÖÉ„ÅÆÂèñÂºïÁ®ÆÂà•„Çí‰øùÊåÅ
    
    -- ‰æ°Ê†º„Éá„Éº„Çø
    d.prev_close,
    d.day_open,
    d.day_high,
    d.day_low,
    d.day_close,
    d.prev_close_to_open_gap,
    d.open_to_high_gap,
    d.open_to_low_gap,
    d.open_to_close_gap,
    d.daily_range,
    d.baseline_profit_rate,
    d.is_win,
    d.trading_volume,
    d.prev_volume,
    d.prev_trading_value,
    d.tradable_shares,
    
    -- ÂêÑÊåáÊ®ô„ÅÆ‰øÇÊï∞„ÇíÂèñÂæóÔºàD81„ÅÆÊñ∞ÊßãÈÄ†Ôºötrade_type„Å™„ÅóÔºâ
    c.coef_h3p, c.coef_h1p, c.coef_l3p, c.coef_l1p,
    c.coef_cu3p, c.coef_cu1p, c.coef_cd3p, c.coef_cd1p,
    c.coef_ud75p, c.coef_dd75p, c.coef_uc3p, c.coef_dc3p,
    c.coef_up_direction, c.coef_down_direction,  -- Êñ∞„Ç´„É©„É†
    c.coef_vol3p, c.coef_vol5p
    
  FROM `kabu-376213.kabu2411.D10_trading_signals` d
  JOIN `kabu-376213.kabu2411.D81_signal_coefficients_8indicators` c
    ON d.signal_type = c.signal_type 
    AND d.signal_bin = c.signal_bin
    -- trade_type„ÅÆJOINÊù°‰ª∂„ÇíÂâäÈô§ÔºàD81„ÅÆÊñ∞ÊßãÈÄ†Ôºâ
  WHERE d.signal_date >= '2022-07-01'  -- ÂÖ®ÊúüÈñì
),

-- 2. ÂêÑ„Çπ„Ç≥„Ç¢„Çø„Ç§„Éó„ÅÆÂØæÊï∞Âíå„ÇíË®àÁÆó
log_scores AS (
  SELECT 
    signal_date,
    stock_code,
    ANY_VALUE(stock_name) as stock_name,
    
    -- ‰æ°Ê†º„Éá„Éº„ÇøÔºàÊúÄÂàù„ÅÆÂÄ§„Çí‰øùÊåÅÔºâ
    ANY_VALUE(prev_close) as prev_close,
    ANY_VALUE(day_open) as day_open,
    ANY_VALUE(day_high) as day_high,
    ANY_VALUE(day_low) as day_low,
    ANY_VALUE(day_close) as day_close,
    ANY_VALUE(prev_close_to_open_gap) as prev_close_to_open_gap,
    ANY_VALUE(open_to_high_gap) as open_to_high_gap,
    ANY_VALUE(open_to_low_gap) as open_to_low_gap,
    ANY_VALUE(open_to_close_gap) as open_to_close_gap,
    ANY_VALUE(daily_range) as daily_range,
    ANY_VALUE(trading_volume) as trading_volume,
    ANY_VALUE(prev_volume) as prev_volume,
    ANY_VALUE(prev_trading_value) as prev_trading_value,
    ANY_VALUE(tradable_shares) as tradable_shares,
    
    -- ÂêÑ„Çπ„Ç≥„Ç¢„ÅÆÂØæÊï∞ÂíåÔºà37„Ç∑„Ç∞„Éä„É´„ÅÆ‰øÇÊï∞„ÅÆÁ©çÔºâ
    SUM(LN(GREATEST(coef_h3p, 0.01))) as log_score_h3p,
    SUM(LN(GREATEST(coef_h1p, 0.01))) as log_score_h1p,
    SUM(LN(GREATEST(coef_l3p, 0.01))) as log_score_l3p,
    SUM(LN(GREATEST(coef_l1p, 0.01))) as log_score_l1p,
    SUM(LN(GREATEST(coef_cu3p, 0.01))) as log_score_cu3p,
    SUM(LN(GREATEST(coef_cu1p, 0.01))) as log_score_cu1p,
    SUM(LN(GREATEST(coef_cd3p, 0.01))) as log_score_cd3p,
    SUM(LN(GREATEST(coef_cd1p, 0.01))) as log_score_cd1p,
    SUM(LN(GREATEST(coef_ud75p, 0.01))) as log_score_ud75p,
    SUM(LN(GREATEST(coef_dd75p, 0.01))) as log_score_dd75p,
    SUM(LN(GREATEST(coef_uc3p, 0.01))) as log_score_uc3p,
    SUM(LN(GREATEST(coef_dc3p, 0.01))) as log_score_dc3p,
    SUM(LN(GREATEST(coef_up_direction, 0.01))) as log_score_up_direction,      -- Êñ∞
    SUM(LN(GREATEST(coef_down_direction, 0.01))) as log_score_down_direction,  -- Êñ∞
    SUM(LN(GREATEST(coef_vol3p, 0.01))) as log_score_vol3p,
    SUM(LN(GREATEST(coef_vol5p, 0.01))) as log_score_vol5p
  FROM score_calculation
  GROUP BY signal_date, stock_code  -- original_trade_type„ÇíÂâäÈô§ÔºàBUY/SELLÁµ±‰∏ÄÔºâ
),

-- 3. UNPIVOTÂΩ¢Âºè„Å´Â§âÊèõÔºà16Á®ÆÈ°û„ÅÆ„Çπ„Ç≥„Ç¢„Çø„Ç§„ÉóÔºâ
unpivoted_scores AS (
  -- Êó¢Â≠ò8ÊåáÊ®ô
  SELECT signal_date, stock_code, stock_name, 'H3P' as score_type, log_score_h3p as score_value, 
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'H1P', log_score_h1p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'L3P', log_score_l3p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'L1P', log_score_l1p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'CU3P', log_score_cu3p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'CU1P', log_score_cu1p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'CD3P', log_score_cd3p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'CD1P', log_score_cd1p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  
  -- Êñ∞4ÊåáÊ®ô
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'UD75P', log_score_ud75p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'DD75P', log_score_dd75p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'UC3P', log_score_uc3p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'DC3P', log_score_dc3p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  
  -- ÊñπÂêëÊÄßÔºàÂàÜÈõ¢ÁâàÔºâ
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'UP_DIRECTION', log_score_up_direction,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'DOWN_DIRECTION', log_score_down_direction,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  
  -- „Éú„É©„ÉÜ„Ç£„É™„ÉÜ„Ç£
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'VOL3P', log_score_vol3p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
  UNION ALL
  SELECT signal_date, stock_code, stock_name, 'VOL5P', log_score_vol5p,
         prev_close, day_open, day_high, day_low, day_close, prev_close_to_open_gap, open_to_high_gap, 
         open_to_low_gap, open_to_close_gap, daily_range, trading_volume, 
         prev_volume, prev_trading_value, tradable_shares 
  FROM log_scores
),

-- 4. „Çπ„Ç≥„Ç¢bin„ÇíË®àÁÆóÔºàÊñ∞„Åó„ÅÑM20_score_bins„Çí‰ΩøÁî®Ôºâ
scores_with_bins AS (
  SELECT 
    s.*,
    -- M20_score_bins„Åã„Çâbin„ÇíÊ±∫ÂÆöÔºà16Á®ÆÈ°ûÁâàÔºâ
    COALESCE(
      (SELECT MAX(sb.score_bin) 
       FROM `kabu-376213.kabu2411.M20_score_bins` sb
       WHERE sb.score_type = s.score_type
         AND s.score_value > sb.lower_bound 
         AND s.score_value <= sb.upper_bound), 
      1
    ) as score_bin
  FROM unpivoted_scores s
)

-- 5. ÊúÄÁµÇÁµêÊûúÔºàÂêÑ„Çπ„Ç≥„Ç¢„Å´ÂØæ„Åó„Å¶BUY/SELL‰∏°Êñπ„ÅÆÊà¶Áï•„ÇíÁîüÊàêÔºâ
SELECT 
  signal_date,
  score_type,  -- 16Á®ÆÈ°û
  score_bin,
  strategy_type as trade_type,  -- Êà¶Áï•„Å®„Åó„Å¶„ÅÆBUY/SELL
  stock_code,
  stock_name,
  score_value,
  prev_close,
  day_open,
  day_high,
  day_low,
  day_close,
  prev_close_to_open_gap,
  open_to_high_gap,
  open_to_low_gap,
  open_to_close_gap,
  daily_range,
  -- Êà¶Áï•„Å´Âøú„Åò„ÅüÂà©ÁõäÁéáË®àÁÆó
  CASE 
    WHEN strategy_type = 'BUY' THEN 
      open_to_close_gap / NULLIF(day_open, 0) * 100  -- BUYÊà¶Áï•ÔºöÂØÑ‚ÜíÂºï„ÅÆ‰∏äÊòáÁéá
    ELSE 
      -open_to_close_gap / NULLIF(day_open, 0) * 100  -- SELLÊà¶Áï•ÔºöÂØÑ‚ÜíÂºï„ÅÆ‰∏ãËêΩÁéá
  END as baseline_profit_rate,
  CASE 
    WHEN strategy_type = 'BUY' THEN 
      CASE WHEN open_to_close_gap > 0 THEN TRUE ELSE FALSE END
    ELSE 
      CASE WHEN open_to_close_gap < 0 THEN TRUE ELSE FALSE END
  END as is_win,
  trading_volume,
  prev_volume,
  prev_trading_value,
  tradable_shares,
  CURRENT_TIMESTAMP() as created_at
FROM scores_with_bins
CROSS JOIN UNNEST(['BUY', 'SELL']) as strategy_type;  -- ÂêÑ„Çπ„Ç≥„Ç¢„Å´ÂØæ„Åó„Å¶BUY/SELLÊà¶Áï•„ÇíÈÅ©Áî®

-- ============================================================================
-- Part 3: ÂÆå‰∫ÜÁ¢∫Ë™ç
-- ============================================================================

-- Á∑è„É¨„Ç≥„Éº„ÉâÊï∞Á¢∫Ë™ç
SELECT 
  '‚úÖ D30_trading_scores 16ÊåáÊ®ôÁâàÊäïÂÖ•ÂÆå‰∫Ü' as status,
  COUNT(*) as total_records,
  COUNT(DISTINCT score_type) as score_types_should_be_16,
  COUNT(DISTINCT stock_code) as stock_count,
  COUNT(DISTINCT trade_type) as trade_types,
  MIN(signal_date) as min_date,
  MAX(signal_date) as max_date,
  CURRENT_TIMESTAMP() as completion_time
FROM `kabu-376213.kabu2411.D30_trading_scores`;

-- „Çπ„Ç≥„Ç¢„Çø„Ç§„ÉóÂà•„É¨„Ç≥„Éº„ÉâÊï∞Á¢∫Ë™ç
SELECT 
  'üìä „Çπ„Ç≥„Ç¢„Çø„Ç§„ÉóÂà•„Éá„Éº„ÇøÂàÜÂ∏É' as check_type,
  score_type,
  COUNT(*) as record_count,
  COUNT(DISTINCT CONCAT(score_type, '_', trade_type)) as strategy_combinations,
  COUNT(DISTINCT stock_code) as stock_count,
  ROUND(AVG(score_value), 4) as avg_score_value,
  COUNT(DISTINCT score_bin) as bin_count
FROM `kabu-376213.kabu2411.D30_trading_scores`
WHERE signal_date = (SELECT MAX(signal_date) FROM `kabu-376213.kabu2411.D30_trading_scores`)
GROUP BY score_type
ORDER BY score_type;

-- ÊñπÂêëÊÄßÊåáÊ®ô„ÅÆÁ¢∫Ë™ç
SELECT 
  'üîç ÊñπÂêëÊÄßÊåáÊ®ô„ÅÆÂàÜÈõ¢Á¢∫Ë™ç' as check_type,
  score_type,
  trade_type,
  COUNT(*) as record_count,
  ROUND(AVG(score_value), 4) as avg_score,
  COUNT(DISTINCT score_bin) as bins_used
FROM `kabu-376213.kabu2411.D30_trading_scores`
WHERE score_type IN ('UP_DIRECTION', 'DOWN_DIRECTION')
  AND signal_date = (SELECT MAX(signal_date) FROM `kabu-376213.kabu2411.D30_trading_scores`)
GROUP BY score_type, trade_type
ORDER BY score_type, trade_type;

-- 16ÊåáÊ®ô„ÅÆÂÆüË£ÖÁ¢∫Ë™ç
WITH expected_scores AS (
  SELECT score FROM UNNEST([
    'H3P', 'H1P', 'L3P', 'L1P',
    'CU3P', 'CU1P', 'CD3P', 'CD1P',
    'UD75P', 'DD75P', 'UC3P', 'DC3P',
    'UP_DIRECTION', 'DOWN_DIRECTION',
    'VOL3P', 'VOL5P'
  ]) as score
)
SELECT 
  'üéØ 16ÊåáÊ®ô„ÅÆÂÆüË£ÖÁä∂Ê≥Å' as check_type,
  es.score as expected_score,
  CASE WHEN COUNT(d.score_type) > 0 THEN '‚úÖ' ELSE '‚ùå' END as status,
  COUNT(d.score_type) as records_on_latest_date
FROM expected_scores es
LEFT JOIN (
  SELECT DISTINCT score_type 
  FROM `kabu-376213.kabu2411.D30_trading_scores`
  WHERE signal_date = (SELECT MAX(signal_date) FROM `kabu-376213.kabu2411.D30_trading_scores`)
) d ON es.score = d.score_type
GROUP BY es.score
ORDER BY es.score;